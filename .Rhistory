library(tidyr)
library(ggplot2)
library(maptools)
library(raster)
library(data.table)
library(dplyr)
library(stringr)
library(chron)
library(R2jags)
library(knitr)
newModel=T
opts_chunk$set(echo=F,warning=F,message=F,fig.width=11)
mytheme<-theme(axis.text.x=element_blank(),axis.ticks.x=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank(),axis.title.x=element_blank(),axis.title.y=element_blank(),panel.grid=element_blank())
# Chunk 2
if(!newModel){
load("WhalePhys.RData")
newModel=F
}
#get dive data
f<-list.files("C:/Users/Ben/Dropbox/Whales/Data/Humpback",pattern="Locations",full.names=T,recursive = T)
#just grab five individuals for now
gdat<-lapply(f,function(x) read.csv(x,stringsAsFactors=F))
gdat<-lapply(gdat,function(x){
x$Quality<-as.character(x$Quality)
return(x)
})
gdat<-bind_rows(gdat)
#timestamp
gdat$Date<-as.POSIXct(gdat$Date,format="%H:%M:%S %d-%b-%Y",tz="Etc/GMT+3")
#get data files
f<-list.files("C:/Users/Ben/Dropbox/Whales/Data/Humpback/",pattern="Behavior",full.names=T,recursive = T)
dat<-bind_rows(lapply(f,read.csv))
dat$GMTtime<-as.POSIXct(dat$End,format="%H:%M:%S %d-%b-%Y",tz="Etc/GMT+3")
#local time
dat$timestamp<-as.POSIXct(format(dat$GMTtime,tz="Etc/GMT+3"))
dat$Month<-months(dat$timestamp)
dat$Month<-factor(dat$Month,levels=month.name)
dat$Hour<-strftime(dat$timestamp,format="%H")
dat$Year<-years(dat$timestamp)
#create unique messages
indices<-which(dat$What=="Message")
counter=1
dat$ID<-NA
for (x in 1:(length(indices)-1)){
dat[indices[x]:indices[x+1],"ID"]<-counter
counter=counter+1
}
dive<-dat %>% filter(What=="Dive")%>% dplyr::select(Animal=Ptt,timestamp,Hour,Month,Year, ID,Start,DepthMax,DepthMin,DurationMax)
dive<-dive[!is.na(dive$Month),]
#remove duplicate data
dive<-dive %>% arrange(Animal,timestamp)
dive<-dive[!duplicated(dive),]
# Chunk 3
##Merge with geographic data and format for JAGS
messages<-dat %>% filter(dat$What=="Message")
messages$timestamp<-as.POSIXct(messages$End,format="%H:%M:%S %d-%b-%Y",tz="Etc/GMT+3")
#look up the time interval that best fits
setDT(gdat)            ## convert to data.table by reference
setDT(messages)            ## same
setkey(messages, Ptt,timestamp)    ## set the column to perform the join on
setkey(gdat,Ptt, Date)    ## same as above
ans = gdat[messages, roll=Inf] ## perform rolling join
ans<-as.data.frame(ans)
message_join<-ans %>% select(Date,Animal=Ptt,Date,Quality,Latitude,Longitude,ID)
mdat<-merge(dat,message_join,by="ID")
mdat<-mdat %>% filter(What=="Dive")
#The maxiumum dive depth based on the geographic message
mdat<-mdat %>% select(ID,Animal,Latitude,Longitude,timestamp,Date,Month,Hour,Year,DepthMax,Quality)
mdat<-mdat %>% group_by(ID,Animal) %>% slice(which.max(DepthMax)) %>% arrange(Animal,timestamp) %>% filter(!is.na(Latitude))
#crop by extent
d<-SpatialPointsDataFrame(cbind(mdat$Longitude,mdat$Latitude),data=data.frame(mdat),proj4string=CRS("+proj=longlat +datum=WGS84"))
cropoly<-readShapePoly("Data/CutPolygon.shp",proj4string=CRS("+proj=longlat +datum=WGS84"))
b<-d[!is.na(d %over% cropoly)[,2],]
mdat<-b@data
#view data
ggplot(data=mdat)+geom_path(aes(x=Longitude, y=Latitude,group=Animal),size=.5) + geom_point(aes(x=Longitude, y=Latitude,col=DepthMax))+ borders(fill="grey90") + coord_cartesian(ylim = range(mdat$Latitude),xlim=range(mdat$Longitude)) + theme_bw() + mytheme + scale_color_continuous(low="blue",high="red") + labs(col="Max Dive Depth(m)")
##Time is the beginning of the first point.
step_length=6
sxy<-split(mdat,mdat$Animal)
#time diff function
timed<-function(d,step_length){
d$j[1]<-0
for (x in 2:nrow(d)){
d$j[x]<-as.numeric(difftime(as.POSIXct(d$timestamp[x]),as.POSIXct(d$timestamp[x-1]),units="mins"))/(step_length*60)
}
#Split out track endings
ends<-c(1,which(d$j>1),nrow(d))
for(w in 2:length(ends)){
d[ends[w-1]:ends[w],"Track"]<-w-1
}
#remove tracks that are shorter than three days
track_time<-d %>% group_by(Track) %>% summarize(mt=difftime(max(as.POSIXct(timestamp)),min(as.POSIXct(timestamp)),units="hours")) %>% filter(mt>=24) %>% .$Track
d<-d[d$Track %in% track_time,]
#renumber the tracks
d$Track<-as.numeric(as.factor(d$Track))
return(d)
}
sxy<-lapply(sxy,timed,step_length=step_length)
#Format matrices for jags
mdat<-bind_rows(sxy)
sxy<-split(mdat,list(mdat$Animal,mdat$Track),drop=TRUE)
sxy<-lapply(sxy,function(x){
#How many observations in each step length segment
x$step<-as.numeric(cut(as.POSIXct(x$timestamp),paste(step_length,"hours")))
return(x)
})
mdat<-bind_rows(sxy)
###################################################
#filter by two whales for the moment
mdat<-mdat %>% filter(Animal %in% c("131127","131136"))
####################################################
#refactor animal
mdat$Animal<-as.numeric(as.factor(mdat$Animal))
##Split into format for JAGS
#total number of steps per track/animal
steps_all<-mdat %>% group_by(Animal,Track) %>% summarize(n=length(unique(step)))
# give each step a label
mdat<-mdat %>% group_by(Animal,Track,step) %>% mutate(jStep=1:n())
#Cast time array
j<-reshape2::acast(mdat,Animal~Track~step~jStep,value.var="j")
#how many observations per individual in each step
mdat$step<-factor(mdat$step,levels=1:max(steps_all$n))
idx<-reshape2::melt(table(mdat$Animal,mdat$Track,mdat$step))
colnames(idx)<-c("Animal","Track","step","jStep")
idx<-reshape2::acast(data=idx,Animal~Track~step)
#Individuals
ind=length(unique(mdat$Animal))
#tracks per indivudal
tracks<-mdat %>% group_by(Animal) %>% summarize(tracks=length(unique(Track))) %>% .$tracks
#steps per track
steps<-reshape2::acast(steps_all,Animal~Track,value.var="n")
#obs array
obs<-reshape2::melt(mdat,measure.vars=c("Longitude","Latitude"))
obs<-reshape2::acast(obs,Animal~Track~step~jStep~variable,fun.aggregate = mean)
#argos class array
mdat$argos.lc<-factor(mdat$Quality,levels=c(3,2,1,0,"A","B"))
mdat$numargos<-as.numeric(mdat$argos.lc)
obs_class<-reshape2::acast(mdat,Animal~Track~step~jStep,value.var="numargos",fun.aggregate = min)
obs_class[!is.finite(obs_class)]<-NA
#average dive depth array
maxdive<-reshape2::acast(mdat,Animal~Track~step~jStep,value.var="DepthMax",fun.aggregate = mean)
#fill the empty values
maxdive[!is.finite(maxdive)]<-NA
#average number of dives
divecount<-reshape2::acast(mdat,Animal~Track~step,value.var="DepthMax",fun.aggregate = length)
#no dives, fill empty
divecount[divecount==0]<-NA
# Chunk 4
# Chunk 5
#source jags file
source("Bayesian/Diving.R")
#prior cov shape
R <- diag(c(1,1))
data=list(divecount=divecount,dive=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#paramters to track
pt<-c("alpha","depth_mu","depth_tau","dive_new","state","lambda_count")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10000,n.burnin=9500,n.thin=2,DIC=FALSE))
}
# Chunk 6
#bind chains
pc_dive<-reshape2::melt(diving$BUGSoutput$sims.array)
colnames(pc_dive)<-c("Draw","chain","par","value")
#extract parameter name
pc_dive$parameter<-data.frame(str_match(pc_dive$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc_dive,pc_dive$parameter)
#single index
splitpc[c("alpha","depth_mu","depth_tau","lambda_count")]<-lapply(splitpc[c("alpha","depth_mu","depth_tau","lambda_count")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
#3 index
splitpc[c("state")]<-lapply(splitpc[c("state")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+)"))[,3:5]
colnames(sv)<-c("Animal","Track","step")
pc<-data.frame(x,sv)
return(pc)
})
#source jags file
source("Bayesian/Diving.R")
#prior cov shape
R <- diag(c(1,1))
data=list(divecount=divecount,dive=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#paramters to track
pt<-c("alpha","depth_mu","depth_tau","dive_new","state","lambda_count")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=100,n.burnin=0,n.thin=2,DIC=FALSE))
}
source('~/WhalePhys/Bayesian/Diving.R')
#source jags file
source("Bayesian/Diving.R")
#prior cov shape
R <- diag(c(1,1))
data=list(divecount=divecount,dive=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#paramters to track
pt<-c("alpha","depth_mu","depth_tau","dive_new","state","lambda_count")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=100,n.burnin=0,n.thin=2,DIC=FALSE))
}
source('~/WhalePhys/Bayesian/Diving.R')
#source jags file
source("Bayesian/Diving.R")
#prior cov shape
R <- diag(c(1,1))
data=list(divecount=divecount,dive=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#paramters to track
pt<-c("alpha","depth_mu","depth_tau","dive_new","state","lambda_count","fit","fitnew")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=100,n.burnin=0,n.thin=2,DIC=FALSE))
}
source('~/WhalePhys/Bayesian/Diving.R')
source('~/WhalePhys/Bayesian/Diving.R')
#source jags file
source("Bayesian/Diving.R")
#prior cov shape
R <- diag(c(1,1))
data=list(divecount=divecount,dive=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#paramters to track
pt<-c("alpha","depth_mu","depth_tau","dive_new","state","lambda_count","fit","fitnew")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=100,n.burnin=0,n.thin=2,DIC=FALSE))
}
array(1:10,1:10)
sum(array(1:10,1:10))
?array
sum(array(data=c(1:10,1:10)))
array(data=c(1:10,1:10))
array(data=c(1:10,1:10))
array(data=c(1:10,1:10))
sum(array(data=c(1:10,1:10)))
dim(array(data=c(1:10,1:10))))
dim(array(data=c(1:10,1:10)))
matrix(1:10,1:10)
matrix(1:10,1:10,1:10)
matrix(1:10,c(1:10))
matrix(1:10,c(1:10,1:10))
data.frame(a=1:10,b=1:10,f=1:10)
g<-data.frame(a=1:10,b=1:10,f=1:10)
acast(g)
reshape2::acast(g)
reshape2::acast(g,a~b~f)
sum(reshape2::acast(g,a~b~f))
sum(reshape2::acast(g,a~b~f),na.rm=T)
mreshape2::acast(g,a~b~f)
m<-reshape2::acast(g,a~b~f)
sum(m)
sum(m,na.tm=T)
sum(m,na.rm=T)
s<-c()
for(x in 1:dim(m)[1]){
for(y in 1:dim(m)[2])
s[x]<-sum(m[x,y,])
}
s
s<-c()
for(x in 1:dim(m)[1]){
for(y in 1:dim(m)[2])
s[x]<-sum(m[x,y,],na.rm=T)
}
s
dim(m)
m
sim(m)
sum(m,na.rm=T)
m[1,]
m[1,,]
m[!is.na(m)]
m[!is.na(m),]
m[!is.na(m)]
m
g
m<-reshape2::acast(g,a~b~f)
m
g<-data.frame(a=1:10,b=1:10,f=1:10,rpois(`0`))
g<-data.frame(a=1:10,b=1:10,f=1:10,rpois(`0`))
g<-data.frame(a=1:10,b=1:10,f=1:10,rpois(10))
g<-data.frame(a=1:10,b=1:10,f=1:10,rpois(10,5))
g
g<-data.frame(a=1:10,b=1:10,f=1:10,value=rpois(10,5))
g
reshape2::acast(g,a~b~f)
m<-reshape2::acast(g,a~b~f)
sum(m)
m[is.na(m)]
m[is.na(m)]<-0
m
sum(m)
s<-c()
for(x in 1:dim(m)[1]){
for(y in 1:dim(m)[2])
s[x]<-sum(m[x,y,],na.rm=T)
}
s
m[1,1,]
sum(m[1,1,])
s<-c()
for(x in 1:dim(m)[1]){
for(y in 1:dim(m)[2])
s[x,y]<-sum(m[x,y,],na.rm=T)
}
s<-matrix()
for(x in 1:dim(m)[1]){
for(y in 1:dim(m)[2])
s[x,y]<-sum(m[x,y,],na.rm=T)
}
s<-matrix(nrow=2,ncol=2)
for(x in 1:dim(m)[1]){
for(y in 1:dim(m)[2])
s[x,y]<-sum(m[x,y,],na.rm=T)
}
s<-matrix(ncol=2)
for(x in 1:dim(m)[1]){
for(y in 1:dim(m)[2])
s[x,y]<-sum(m[x,y,],na.rm=T)
}
s
s<-matrix(ncol=2,nrow=dim(m)[2])
for(x in 1:dim(m)[1]){
for(y in 1:dim(m)[2])
s[x,y]<-sum(m[x,y,],na.rm=T)
}
sum(m)
source('~/WhalePhys/Bayesian/Diving.R')
#source jags file
source("Bayesian/Diving.R")
#prior cov shape
R <- diag(c(1,1))
data=list(divecount=divecount,dive=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#paramters to track
pt<-c("alpha","depth_mu","depth_tau","dive_new","state","lambda_count","fit","fitnew")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=100,n.burnin=0,n.thin=2,DIC=FALSE))
}
source('~/WhalePhys/Bayesian/Diving.R')
#source jags file
source("Bayesian/Diving.R")
#prior cov shape
R <- diag(c(1,1))
data=list(divecount=divecount,dive=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#paramters to track
pt<-c("alpha","depth_mu","depth_tau","dive_new","state","lambda_count","fit","fitnew")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=100,n.burnin=0,n.thin=2,DIC=FALSE))
}
source('~/WhalePhys/Bayesian/Diving.R')
system.time(diving<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=100,n.burnin=0,n.thin=2,DIC=FALSE))
diving
tail(diving)
names(diving$BUGSoutput$sims.list)
source('~/WhalePhys/Bayesian/Diving.R')
system.time(diving<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=100,n.burnin=0,n.thin=2,DIC=FALSE))
source('~/WhalePhys/Bayesian/Diving.R')
#source jags file
source("Bayesian/Diving.R")
#prior cov shape
R <- diag(c(1,1))
data=list(divecount=divecount,dive=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#paramters to track
pt<-c("alpha","depth_mu","depth_tau","dive_new","state","lambda_count","E","Enew","fit","fitnew")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=100,n.burnin=0,n.thin=2,DIC=FALSE))
}
source('~/WhalePhys/Bayesian/Diving.R')
#bind chains
pc_dive<-reshape2::melt(diving$BUGSoutput$sims.array)
colnames(pc_dive)<-c("Draw","chain","par","value")
#extract parameter name
pc_dive$parameter<-data.frame(str_match(pc_dive$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc_dive,pc_dive$parameter)
#single index
splitpc[c("alpha","depth_mu","depth_tau","lambda_count")]<-lapply(splitpc[c("alpha","depth_mu","depth_tau","lambda_count")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
#3 index
splitpc[c("state")]<-lapply(splitpc[c("state")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+)"))[,3:5]
colnames(sv)<-c("Animal","Track","step")
pc<-data.frame(x,sv)
return(pc)
})
#4 index
splitpc[c("dive_new","E","Enew")]<-lapply(splitpc[c("dive_new")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+),(\\d+)]"))[,3:6]
colnames(sv)<-c("Animal","Track","step","jStep")
pc<-data.frame(x,sv)
return(pc)
})
#bind all matrices back together
pc_dive<-bind_rows(splitpc)
rm(splitpc)
ggplot(pc_dive[!pc_dive$parameter %in% c("dive_new","state"),],aes(x=Draw,y=value,col=as.factor(chain))) + geom_line() + facet_wrap(~par,scales="free")
table(pc_dive$parameter)
#bind chains
pc_dive<-reshape2::melt(diving$BUGSoutput$sims.array)
colnames(pc_dive)<-c("Draw","chain","par","value")
#extract parameter name
pc_dive$parameter<-data.frame(str_match(pc_dive$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc_dive,pc_dive$parameter)
#single index
splitpc[c("alpha","depth_mu","depth_tau","lambda_count")]<-lapply(splitpc[c("alpha","depth_mu","depth_tau","lambda_count")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
#3 index
splitpc[c("state")]<-lapply(splitpc[c("state")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+)"))[,3:5]
colnames(sv)<-c("Animal","Track","step")
pc<-data.frame(x,sv)
return(pc)
})
#4 index
splitpc[c("dive_new","E","Enew")]<-lapply(splitpc[c("dive_new","E","Enew")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+),(\\d+)]"))[,3:6]
colnames(sv)<-c("Animal","Track","step","jStep")
pc<-data.frame(x,sv)
return(pc)
})
#bind all matrices back together
pc_dive<-bind_rows(splitpc)
rm(splitpc)
ggplot(pc_dive[!pc_dive$parameter %in% c("dive_new","state"),],aes(x=Draw,y=value,col=as.factor(chain))) + geom_line() + facet_wrap(~par,scales="free")
table(pc_dive$parameter)
ggplot(pc_dive[!pc_dive$parameter %in% c("dive_new","state","E","Enew"),],aes(x=Draw,y=value,col=as.factor(chain))) + geom_line() + facet_wrap(~par,scales="free")
pc_dive %>% filter(parameter %in% c("E","Enew")) %>% group_by(Draw,chain) %>% summarize(fit=sum(value))
pc_dive %>% filter(parameter %in% c("E","Enew")) %>% group_by(parameter,Draw,chain) %>% summarize(fit=sum(value))
fitstat<-pc_dive %>% filter(parameter %in% c("E","Enew")) %>% group_by(parameter,Draw,chain) %>% summarize(fit=sum(value))
fitstat<-pc_dive %>% filter(parameter %in% c("E","Enew")) %>% group_by(parameter,Draw,chain) %>% summarize(fit=sum(value))
fitstat<-pc_dive %>% filter(parameter %in% c("E","Enew")) %>% group_by(Model=parameter,Draw,chain) %>% summarize(fit=sum(value))
fitstat<-pc_dive %>% filter(parameter %in% c("E","Enew")) %>% group_by(parameter,Draw,chain) %>% summarize(fit=sum(value))
fitstat<-dcast(fitstat,Draw+chain~parameter,value.var="fit")
head(fitsstat)
head(fitstat)
ymin<-min(c(fitstat$E,fitstat$Enew)) - min(c(fitstat$E,fitstat$Enew)) * .2
ymax<-max(c(fitstat$E,fitstat$Enew)) + max(c(fitstat$E,fitstat$Enew)) * .2
disc_obs<-ggplot(fitstat,aes(x=E,y=Enew)) + geom_point(aes(col=Model)) + theme_bw() + labs(x="Discrepancy of observed data",y="Discrepancy of replicated data",col="Model") + geom_abline() + coord_fixed() + ylim(ymin=ymin,ymax=ymax) + xlim(xmin=ymin,xmax=ymax)
dim(fitstat)
disc_obs
disc_obs<-ggplot(fitstat,aes(x=E,y=Enew)) + geom_point() + theme_bw() + labs(x="Discrepancy of observed data",y="Discrepancy of replicated data",col="Model") + geom_abline() + coord_fixed() + ylim(ymin=ymin,ymax=ymax) + xlim(xmin=ymin,xmax=ymax)
fitstat %>% group_by() %>% summarize(mean(E),var(Enew))
disc_obs<-ggplot(fitstat,aes(x=E,y=Enew)) + geom_point() + theme_bw() + labs(x="Discrepancy of observed data",y="Discrepancy of replicated data") + geom_abline() + coord_fixed() + ylim(ymin=ymin,ymax=ymax) + xlim(xmin=ymin,xmax=ymax)
ggplot(fitstat,aes(x=E,y=Enew)) + geom_point() + theme_bw() + labs(x="Discrepancy of observed data",y="Discrepancy of replicated data") + geom_abline() + coord_fixed() + ylim(ymin=ymin,ymax=ymax) + xlim(xmin=ymin,xmax=ymax)
source('~/WhalePhys/Bayesian/Diving.R')
source('~/WhalePhys/Bayesian/Diving.R')
load("WhalePhys.RData")
ggplot(pred_counts) geom_histogram(data=obs_count,aes(x=Counts),col="black",size=1) + theme_bw() + geom_histogram(alpha=0.5,aes(x=Counts,fill=Behavior)) +
```
ggplot(pred_counts) geom_histogram(data=obs_count,aes(x=Counts),col="black",size=1) + theme_bw() + geom_histogram(alpha=0.5,aes(x=Counts,fill=Behavior))
ggplot(pred_counts) + geom_histogram(data=obs_count,aes(x=Counts),col="black",size=1) + theme_bw() + geom_histogram(alpha=0.5,aes(x=Counts,fill=Behavior))
ggplot(pred_counts) + geom_histogram(data=obs_count,aes(x=Counts),col="black") + theme_bw() + geom_histogram(alpha=0.5,aes(x=Counts,fill=Behavior))
ggplot(pred_counts) + geom_histogram(data=obs_count,aes(x=Counts),col="black") + theme_bw() + geom_histogram(alpha=0.7,aes(x=Counts,fill=Behavior))
(6-7)^2/7
(7-6)^2/7
(7-6)^2/7
load("WhalePhys.RData")
ggplot(fitstat,aes(x=E,y=Enew)) + geom_point() + theme_bw() + labs(x="Discrepancy of observed data",y="Discrepancy of replicated data") + geom_abline() + coord_fixed() + ylim(ymin=ymin,ymax=ymax) + xlim(xmin=ymin,xmax=ymax)
fitstat
fitstat %>% arrange(desc(value))
head(fitstat)
fitstat %>% arrange(desc(E))
fitstat %>% arrange(desc(E))
fitstat %>% arrange(desc(E),desc(Enew))
fitstat<-pc_dive %>% filter(parameter %in% c("E","Enew")) %>% group_by(parameter,Draw,chain) %>% summarize(fit=mean(value))
fitstat<-dcast(fitstat,Draw+chain~parameter,value.var="fit")
ymin<-min(c(fitstat$E,fitstat$Enew)) - min(c(fitstat$E,fitstat$Enew)) * .2
ymax<-max(c(fitstat$E,fitstat$Enew)) + max(c(fitstat$E,fitstat$Enew)) * .2
ggplot(fitstat,aes(x=E,y=Enew)) + geom_point() + theme_bw() + labs(x="Discrepancy of observed data",y="Discrepancy of replicated data") + geom_abline() + coord_fixed() + ylim(ymin=ymin,ymax=ymax) + xlim(xmin=ymin,xmax=ymax)
fitstat %>% arrange(desc(E),desc(Enew))
fitstat %>% arrange(desc(E),desc(Enew)) %>% head()
pc_dive %>% arrange(desc(E),desc(Enew)) %>% head()
pc_dive %>% filter(paramater=="") %>% head()
pc_dive %>% filter(parameter=="") %>% head()
pc_dive %>% filter(Draw==99,chain==3,parameter=="") %>% head()
pc_dive %>% filter(Draw==99,chain==3) %>% head()
pc_dive %>% filter(Draw==99,chain==1) %>% head()
7.426883e-01
1.975756e-01
8.747570e+01
2.217974e+02
4.382430e-04
pc_dive %>% filter(Draw==99,chain==1) %>% head(10)
1200/60
fitstat %>% group_by() %>% summarize(mean(E),var(Enew))
fitstat<-pc_dive %>% filter(parameter %in% c("E","Enew")) %>% group_by(parameter,Draw,chain) %>% summarize(fit=mean(value))
fitstat<-dcast(fitstat,Draw+chain~parameter,value.var="fit")
ymin<-min(c(fitstat$E,fitstat$Enew)) - min(c(fitstat$E,fitstat$Enew)) * .2
ymax<-max(c(fitstat$E,fitstat$Enew)) + max(c(fitstat$E,fitstat$Enew)) * .2
ggplot(fitstat,aes(x=E,y=Enew)) + geom_point() + theme_bw() + labs(x="Discrepancy of observed data",y="Discrepancy of replicated data") + geom_abline() + coord_fixed() + ylim(ymin=ymin,ymax=ymax) + xlim(xmin=ymin,xmax=ymax)
fitstat %>% group_by() %>% summarize(mean(E),var(Enew))
200
(180-200)/200
(180-200)^2/200
source('~/WhalePhys/Bayesian/Diving.R')
fitstat<-pc_dive %>% filter(parameter %in% c("E","Enew")) %>% group_by(parameter,Draw,chain) %>% summarize(fit=mean(value))
head(fitstat)
pc_dive %>% filter(parameter %in% c("E","Enew"),Draw==1,chain==2)
a<-pc_dive %>% filter(parameter %in% c("E","Enew"),Draw==1,chain==2)
head(a)
a$value
sum(a$value)
sort(a$value)
a %>% arrange(desc(value))
a %>% arrange(value)
a %>% arrange(value)
pc_dive %>% filter(Draw==1,chain==2,Animal==2,Track==5,step==5,jStep==5)
source('~/WhalePhys/Bayesian/Diving.R')
