counter=1
for(x in 2:length(unique(d$interval))){
difft<-as.numeric(difftime(as.POSIXct(unique(d$interval)[x]),as.POSIXct(unique(d$interval)[x-1]),units="hours"))
if(difft>step_length){
counter=counter+1
}
Track[x]<-counter
}
d<-d %>% inner_join(data.frame(interval=unique(d$interval),Track))
#First position in each track must be a valid position, recode
d<-d %>% group_by(Track) %>% filter(timestamp >= min(timestamp[!is.na(Latitude)]))
#get jStep and interval time
d<-d %>% group_by(interval) %>% mutate(j=difftime(timestamp,as.POSIXct(interval,tz="GMT"),units="hours")/step_length,jStep=1:n())
#set step and remove tracks less than 2 steps, a bit ugly to maintain subgroup order.
d<-d %>% group_by(Track) %>% mutate(step=as.numeric(as.factor(as.character(interval)))) %>% filter(max(step) > 2)
#remove tracks that are shorter than 12 hours
track_time<-d %>% group_by(Track) %>% summarize(mt=difftime(max(as.POSIXct(timestamp)),min(as.POSIXct(timestamp)),units="hours")) %>% filter(mt>=12) %>% .$Track
return(d)
}
sxy<-lapply(sxy,timed,step_length=step_length)
mdat<-bind_rows(sxy)
mdat %>% group_by(Animal) %>% summarize(n=n())
mdat %>% group_by(Animal) %>% summarize(Tracks=length(unique(Track)))
###################################################
#filter by two whales for the moment
#mdat<-mdat %>% filter(Animal %in% c("131127","131136","131132","131133","154187","131134","131115","131111","131130","131116"))
mdat<-mdat %>% filter(Animal %in% c("131134"))
#remake map
#troy<-makemap(mdat,scale=6)
####################################################
#refactor animal
mdat$jAnimal<-as.numeric(as.factor(mdat$Animal))
##Split into format for JAGS
#Cast time array
j<-reshape2::acast(mdat,jAnimal~Track~step~jStep,value.var="j")
#how many observations per individual in each step
idx<-mdat %>% group_by(jAnimal,Track,step) %>% summarize(n=n())
colnames(idx)<-c("Animal","Track","step","jStep")
idx<-reshape2::acast(data=idx,Animal~Track~step)
#Individuals
ind=length(unique(mdat$Animal))
#tracks per indivudal
tracks<-mdat %>% group_by(Animal) %>% summarize(tracks=length(unique(Track))) %>% .$tracks
#steps per track
steps_all<-mdat %>% group_by(Animal,Track) %>% summarize(n=length(unique(step)))
steps<-reshape2::acast(steps_all,Animal~Track,value.var="n")
#obs array
obs<-reshape2::melt(mdat,measure.vars=c("Longitude","Latitude"))
obs<-reshape2::acast(obs,Animal~Track~step~jStep~variable,fun.aggregate = mean)
obs[!is.finite(obs)]<-NA
#argos class array
mdat$argos.lc<-factor(mdat$Quality,levels=c(3,2,1,0,"A","B"))
mdat$numargos<-as.numeric(mdat$argos.lc)
obs_class<-reshape2::acast(mdat,Animal~Track~step~jStep,value.var="numargos",fun.aggregate = min)
#set interpolated observations to having lowest class of argos error
obs_class[!is.finite(obs_class)]<-6
#average dive depth array
maxdive<-reshape2::acast(mdat,Animal~Track~step~jStep,value.var="DepthMax",fun.aggregate = mean)
hours<-reshape2::acast(mdat,Animal~Track~step,value.var="LocalHour",fun.aggregate = min)
#fill the empty values
maxdive[!is.finite(maxdive)]<-NA
#average number of dives
diveduration<-reshape2::acast(mdat,Animal~Track~step~jStep,value.var="DurationMax")
#Dives
travel_dive_prior<-abs(rnorm(1e5,rnorm(1e5,0,1/sqrt(0.0001)),1/sqrt(runif(1e5,0,500))))
forage_dive_prior<-abs(rnorm(1e5,rnorm(1e5,50,1/sqrt(0.0001)),1/sqrt(runif(1e5,0,500))))
rest_dive_prior<-abs(rnorm(1e5,rnorm(1e5,0,1/sqrt(0.01)),1/sqrt(runif(1e5,0,500))))
divepriors<-gather(data.frame(Travel=travel_dive_prior,Forage=forage_dive_prior,Resting=rest_dive_prior))
ggplot(divepriors) + geom_density(aes(x=value,fill=key),alpha=0.5) + theme_bw()
#source jags file
source("Bayesian/ThreeState.R")
#prior cov shape
R <- diag(c(1,1))
data=list(hours=hours,divedepth=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#Inits
stage_init<-hours
stage_init[]<-1
InitStage<-list(stage=stage_init)
#paramters to track
pt<-c("Traveling","Foraging","gamma","depth_mu","depth_tau","dive_new","state","E","Enew","alpha_hours","beta_hours","beta2_hours")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/ThreeState.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10,n.burnin=0,n.thin=2,DIC=FALSE,inits = InitStage))
}
?jags.parallel
InitStage<-list(list(stage=stage_init),list(stage=stage_init))
pt<-c("Traveling","Foraging","gamma","depth_mu","depth_tau","dive_new","state","E","Enew","alpha_hours","beta_hours","beta2_hours")
#source jags file
source("Bayesian/ThreeState.R")
#prior cov shape
R <- diag(c(1,1))
data=list(hours=hours,divedepth=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#Inits
stage_init<-hours
stage_init[]<-1
InitStage<-list(list(stage=stage_init),list(stage=stage_init))
#paramters to track
pt<-c("Traveling","Foraging","gamma","depth_mu","depth_tau","dive_new","state","E","Enew","alpha_hours","beta_hours","beta2_hours")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/ThreeState.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10,n.burnin=0,n.thin=2,DIC=FALSE,inits = InitStage))
}
lengthInitStage
length(InitStage)
#source jags file
source("Bayesian/ThreeState.R")
#prior cov shape
R <- diag(c(1,1))
data=list(hours=hours,divedepth=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#Inits
stage_init<-hours
stage_init[]<-1
InitStage <- function() {list(stage=stage_init)}
#paramters to track
pt<-c("Traveling","Foraging","gamma","depth_mu","depth_tau","dive_new","state","E","Enew","alpha_hours","beta_hours","beta2_hours")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/ThreeState.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10,n.burnin=0,n.thin=2,DIC=FALSE,inits = InitStage))
}
stage_init
#source jags file
source("Bayesian/ThreeState.R")
#prior cov shape
R <- diag(c(1,1))
data=list(hours=hours,divedepth=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#Inits
stage_init<-hours
stage_init[]<-1
InitStage <- function() {list(stage=stage_init)}
#paramters to track
pt<-c("Traveling","Foraging","gamma","depth_mu","depth_tau","dive_new","state","E","Enew","alpha_hours","beta_hours","beta2_hours")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/ThreeState.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10,n.burnin=0,n.thin=2,DIC=FALSE,inits = InitStage))
}
array()
?array
InitStage <- function() {list(stage=array(dim=c(dim(hours))))}
InitStage
InitStage()
InitStage <- function() {list(stage=array(data=1,dim=c(dim(hours))))}
InitStage()
a<-InitStage()
dim(a)
a
class(a)
class(a[[1]])
dim(a[[1]])
#source jags file
source("Bayesian/ThreeState.R")
#prior cov shape
R <- diag(c(1,1))
data=list(hours=hours,divedepth=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#Inits
stage_init<-hours
stage_init[]<-1
InitStage <- function() {list(stage=array(data=1,dim=c(dim(hours))))}
#paramters to track
pt<-c("Traveling","Foraging","gamma","depth_mu","depth_tau","dive_new","state","E","Enew","alpha_hours","beta_hours","beta2_hours")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/ThreeState.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10,n.burnin=0,n.thin=2,DIC=FALSE,inits = InitStage))
}
#source jags file
source("Bayesian/ThreeState.R")
#prior cov shape
R <- diag(c(1,1))
data=list(hours=hours,divedepth=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#Inits
stage_init<-hours
stage_init[]<-1
InitStage <- function() {list(stage=array(data=1,dim=c(dim(hours))))}
#paramters to track
pt<-c("Traveling","Foraging","gamma","depth_mu","depth_tau","dive_new","state","E","Enew","alpha_hours","beta_hours","beta2_hours")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/ThreeState.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10,n.burnin=0,n.thin=2,DIC=FALSE,inits = InitStage))
}
#bind chains
pc_dive<-reshape2::melt(diving$BUGSoutput$sims.array)
colnames(pc_dive)<-c("Draw","chain","par","value")
#extract parameter name
pc_dive$parameter<-data.frame(str_match(pc_dive$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc_dive,pc_dive$parameter)
#single index
splitpc[c("Traveling","gamma","beta_hours","beta2_hours","alpha_hours","depth_mu","depth_tau")]<-lapply(splitpc[c("Traveling","gamma","alpha_hours","beta_hours","beta2_hours","depth_mu","depth_tau")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
#3 index
splitpc[c("state")]<-lapply(splitpc[c("state")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+)"))[,3:5]
colnames(sv)<-c("Animal","Track","step")
pc<-data.frame(x,sv)
return(pc)
})
#4 index
splitpc[c("dive_new","E","Enew")]<-lapply(splitpc[c("dive_new","E","Enew")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+),(\\d+)]"))[,3:6]
colnames(sv)<-c("Animal","Track","step","jStep")
pc<-data.frame(x,sv)
return(pc)
})
#bind all matrices back together
pc_dive<-bind_rows(splitpc)
rm(splitpc)
ggplot(pc_dive[!pc_dive$parameter %in% c("dive_new","state","E","Enew","eval","argos"),],aes(x=Draw,y=value,col=as.factor(chain))) + geom_line() + facet_wrap(~par,scales="free")
ggplot(pc_dive[!pc_dive$parameter %in% c("dive_new","state","E","Enew","eval","argos"),],aes(x=value,fill=as.factor(chain))) + geom_histogram() + facet_wrap(~par,scales="free")
#Take the most common estimate of behavior
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
#Combine posterior summary
mdat$Animal<-as.factor(mdat$Animal)
mdat$Track<-as.factor(mdat$Track)
mdat$step<-as.factor(mdat$step)
state_est<-pc_dive %>% group_by(jAnimal=Animal,Track,step) %>%  filter(parameter=="state") %>% summarize(Behavior=Mode(value)) %>% ungroup()  %>% mutate(jAnimal=as.numeric(as.character(jAnimal)),Track=as.numeric(as.character(Track)),step=as.numeric(as.character(step))) %>% inner_join(mdat)
state_est[state_est$Behavior==1,"Behavior"]<-"Traveling"
state_est[state_est$Behavior==2,"Behavior"]<-"Foraging"
state_est[state_est$Behavior==3,"Behavior"]<-"Resting"
ggplot(state_est,aes(x=timestamp,y=-DepthMax,col=Behavior)) + geom_point() + geom_line(size=0.25,aes(group=1)) + facet_wrap(~Animal,scales="free",ncol=1) + theme_bw()
#Behavior lookup
blookup<-data.frame(Behavior=c("Traveling","Foraging","Resting"),Index=c(1,2,3))
#how many of each state to draw?
statecount<-state_est %>% group_by(Behavior) %>% filter(is.na(Latitude)) %>% summarize(n=length(jStep))
pred_dives<-list()
for(x in 1:nrow(statecount)){
index<-blookup[ blookup$Behavior %in% statecount[x,"Behavior"],"Index"]
depth_tau<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==index)
depth_mu<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==index)
travel_dives<-data.frame(DepthMax=rtruncnorm(n=as.numeric(statecount[x,"n"]),mean=depth_mu$value,sd=1/sqrt(depth_tau$value),a=0),Behavior=statecount[x,"Behavior"])
pred_dives[[x]]<-travel_dives
}
pred_dives<-bind_rows(pred_dives)
ggplot(pred_dives)  + geom_histogram(data=mdat,aes(x=DepthMax),col="black")+ geom_histogram(alpha=0.8,aes(x=DepthMax,fill=Behavior))  + theme_bw() + labs(x="Dive Depth (m)")
ggsave("Figures/DiveHist.jpg",height=4,width=7)
ggplot(pc_dive[pc_dive$parameter=="dive_new",])+  geom_density(aes(x=value),col='red') + geom_density(data=mdat,aes(x=DepthMax),col="black",size=1.5) + theme_bw() + labs(x="Dive Depth (m)")
ggsave("Figures/DivePredict.jpg",height=4,width=7)
timef<-function(alpha,beta,beta2){
y<-inv.logit(alpha + beta* cos((2*pi*x)/(24)) + beta2 * sin((2*pi*x)/24)^2)
return(data.frame(x,y))
}
cosp<-pc_dive %>% filter(parameter %in% c("alpha_hours","beta_hours","beta2_hours")) %>% spread(parameter,value) %>% group_by(Draw,chain) %>% do(timef(alpha=.$alpha_hours,beta=.$beta_hours,beta2=.$beta2_hours))
ggplot(data=cosp,aes(x=x,y=y)) + geom_point() + geom_line()
cosp
pc_dive %>% filter(parameter %in% c("alpha_hours","beta_hours","beta2_hours"))
pc_dive %>% filter(parameter %in% c("alpha_hours","beta_hours","beta2_hours")) %>% spread(Behavior,value)
pc_dive %>% filter(parameter %in% c("alpha_hours","beta_hours","beta2_hours")) %>% dplyr::select(-par) %>% spread(Behavior,value)
cosp<-pc_dive %>% filter(parameter %in% c("alpha_hours","beta_hours","beta2_hours")) %>% dplyr::select(-par)  %>% group_by(Draw,chain,Behavior) %>% do(timef(alpha=.$alpha_hours,beta=.$beta_hours,beta2=.$beta2_hours))
cosp<-pc_dive %>% filter(parameter %in% c("alpha_hours","beta_hours","beta2_hours")) %>% dplyr::select(-par)  %>% group_by(Draw,chain,Behavior)
cosp
cosp<-pc_dive %>% filter(parameter %in% c("alpha_hours","beta_hours","beta2_hours")) %>% dplyr::select(-par) %>% spread(parameter,value) %>% group_by(Draw,chain,Behavior) %>% do(timef(alpha=.$alpha_hours,beta=.$beta_hours,beta2=.$beta2_hours))
cosp
ggplot(data=cosp,aes(x=x,y=y)) + geom_point() + geom_line()
ggplot(data=cosp,aes(x=x,y=y,col=Behavior)) + geom_point() + geom_line()
cosp
cosp<-pc_dive %>% filter(parameter %in% c("alpha_hours","beta_hours","beta2_hours")) %>% dplyr::select(-par) %>% spread(parameter,value) %>% group_by(Draw,chain,Behavior) %>% do(timef(alpha=.$alpha_hours,beta=.$beta_hours,beta2=.$beta2_hours,x=as.numeric(hours)))
timef<-function(alpha,beta,beta2,x){
y<-inv.logit(alpha + beta* cos((2*pi*x)/(24)) + beta2 * sin((2*pi*x)/24)^2)
return(data.frame(x,y))
}
cosp<-pc_dive %>% filter(parameter %in% c("alpha_hours","beta_hours","beta2_hours")) %>% dplyr::select(-par) %>% spread(parameter,value) %>% group_by(Draw,chain,Behavior) %>% do(timef(alpha=.$alpha_hours,beta=.$beta_hours,beta2=.$beta2_hours,x=as.numeric(hours)))
ggplot(data=cosp,aes(x=x,y=y,col=Behavior)) + geom_point() + geom_line()
ggplot(data=cosp,aes(x=x,y=y,col=Behavior)) + geom_point() + geom_line() + facet_wrap(~Behavior)
#source jags file
source("Bayesian/ThreeState.R")
#prior cov shape
R <- diag(c(1,1))
data=list(hours=hours,divedepth=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#Inits
stage_init<-hours
stage_init[]<-1
InitStage <- function() {list(stage=array(data=3,dim=c(dim(hours))))}
#paramters to track
pt<-c("Traveling","Foraging","gamma","depth_mu","depth_tau","dive_new","state","E","Enew","alpha_hours","beta_hours","beta2_hours")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/ThreeState.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=1000,n.burnin=900,n.thin=2,DIC=FALSE,inits = InitStage))
}
#source jags file
source("Bayesian/ThreeState.R")
#prior cov shape
R <- diag(c(1,1))
data=list(hours=hours,divedepth=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#Inits
stage_init<-hours
stage_init[]<-1
InitStage <- function() {list(stage=array(data=3,dim=c(dim(hours))))}
#paramters to track
pt<-c("Traveling","Foraging","gamma","depth_mu","depth_tau","dive_new","state","E","Enew","alpha_hours","beta_hours","beta2_hours")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/ThreeState.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=1000,n.burnin=900,n.thin=2,DIC=FALSE,inits = InitStage))
}
qplot(rnorm(1e5,100,1/sqrt(0.01)))
qplot(rnorm(1e5,100,1/sqrt(0.02)))
qplot(rnorm(1e5,100,1/sqrt(0.001)))
qplot(rnorm(1e5,20,1/sqrt(0.001)))
qplot(rnorm(1e5,15,1/sqrt(0.001)))
qplot(rnorm(1e5,100,1/sqrt(0.1)))
qplot(rnorm(1e5,15,1/sqrt(0.1)))
#source jags file
source("Bayesian/ThreeState.R")
#prior cov shape
R <- diag(c(1,1))
data=list(hours=hours,divedepth=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#Inits
stage_init<-hours
stage_init[]<-1
InitStage <- function() {list(stage=array(data=3,dim=c(dim(hours))))}
#paramters to track
pt<-c("Traveling","Foraging","gamma","depth_mu","depth_tau","dive_new","state","E","Enew","alpha_hours","beta_hours","beta2_hours")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/ThreeState.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=1000,n.burnin=900,n.thin=2,DIC=FALSE,inits = InitStage))
}
x<-runif(1e4,0,24)
alpha=-1
beta=3
beta2=0
timef<-function(x){
y<-inv.logit(alpha + beta* cos((2*pi*x)/(24)) + beta2 * sin((2*pi*x)/24)^2)
return(data.frame(x,y))
}
y<-timef(x)
d<-data.frame(x,y)
d$Season<-"Summer"
ggplot(data=d,aes(x=x,y=y,col=Season)) + geom_point() + geom_line()
rnorm(1e5,0,1/sqrt(0.0001))
rnorm(1e5,0,1/sqrt(0.001))
qplot(rnorm(1e5,0,1/sqrt(0.001)))
qplot(inv.logit(rnorm(1e5,0,1/sqrt(0.001))))
qplot(inv.logit(rnorm(1e5,0,1/sqrt(0.386))))
qplot(rnorm(1e5,0,1/sqrt(0.386)))
qplot(rnorm(1e5,0,1/sqrt(0.5)))
qplot(rnorm(1e5,0,1/sqrt(0.05))
qplot(rnorm(1e5,0,1/sqrt(0.5))))
qplot(rnorm(1e5,0,1/sqrt(0.5)))
qplot(rnorm(1e5,0,1/sqrt(0.05)))
qplot(inv.logit(rnorm(1e5,0,1/sqrt(0.05))))
qplot(inv.logit(rnorm(1e5,0,1/sqrt(0.5))))
qplot(inv.logit(rnorm(1e5,0,1/sqrt(0.2))))
#source jags file
source("Bayesian/ThreeState.R")
#prior cov shape
R <- diag(c(1,1))
data=list(hours=hours,divedepth=maxdive,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#Inits
stage_init<-hours
stage_init[]<-1
InitStage <- function() {list(stage=array(data=3,dim=c(dim(hours))))}
#paramters to track
pt<-c("Traveling","Foraging","gamma","depth_mu","depth_tau","dive_new","state","E","Enew","alpha_hours","beta_hours","beta2_hours")
if(newModel){
system.time(diving<-jags.parallel(model.file = "Bayesian/ThreeState.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=1000,n.burnin=900,n.thin=2,DIC=FALSE,inits = InitStage))
}
#bind chains
pc_dive<-reshape2::melt(diving$BUGSoutput$sims.array)
colnames(pc_dive)<-c("Draw","chain","par","value")
#extract parameter name
pc_dive$parameter<-data.frame(str_match(pc_dive$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc_dive,pc_dive$parameter)
#single index
splitpc[c("Traveling","gamma","beta_hours","beta2_hours","alpha_hours","depth_mu","depth_tau")]<-lapply(splitpc[c("Traveling","gamma","alpha_hours","beta_hours","beta2_hours","depth_mu","depth_tau")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
#3 index
splitpc[c("state")]<-lapply(splitpc[c("state")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+)"))[,3:5]
colnames(sv)<-c("Animal","Track","step")
pc<-data.frame(x,sv)
return(pc)
})
#4 index
splitpc[c("dive_new","E","Enew")]<-lapply(splitpc[c("dive_new","E","Enew")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+),(\\d+)]"))[,3:6]
colnames(sv)<-c("Animal","Track","step","jStep")
pc<-data.frame(x,sv)
return(pc)
})
#bind all matrices back together
pc_dive<-bind_rows(splitpc)
rm(splitpc)
ggplot(pc_dive[!pc_dive$parameter %in% c("dive_new","state","E","Enew","eval","argos"),],aes(x=Draw,y=value,col=as.factor(chain))) + geom_line() + facet_wrap(~par,scales="free")
ggplot(pc_dive[!pc_dive$parameter %in% c("dive_new","state","E","Enew","eval","argos"),],aes(x=value,fill=as.factor(chain))) + geom_histogram() + facet_wrap(~par,scales="free")
#Take the most common estimate of behavior
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
#Combine posterior summary
mdat$Animal<-as.factor(mdat$Animal)
mdat$Track<-as.factor(mdat$Track)
mdat$step<-as.factor(mdat$step)
state_est<-pc_dive %>% group_by(jAnimal=Animal,Track,step) %>%  filter(parameter=="state") %>% summarize(Behavior=Mode(value)) %>% ungroup()  %>% mutate(jAnimal=as.numeric(as.character(jAnimal)),Track=as.numeric(as.character(Track)),step=as.numeric(as.character(step))) %>% inner_join(mdat)
state_est[state_est$Behavior==1,"Behavior"]<-"Traveling"
state_est[state_est$Behavior==2,"Behavior"]<-"Foraging"
state_est[state_est$Behavior==3,"Behavior"]<-"Resting"
ggplot(state_est,aes(x=timestamp,y=-DepthMax,col=Behavior)) + geom_point() + geom_line(size=0.25,aes(group=1)) + facet_wrap(~Animal,scales="free",ncol=1) + theme_bw()
#Behavior lookup
blookup<-data.frame(Behavior=c("Traveling","Foraging","Resting"),Index=c(1,2,3))
#how many of each state to draw?
statecount<-state_est %>% group_by(Behavior) %>% filter(is.na(Latitude)) %>% summarize(n=length(jStep))
pred_dives<-list()
for(x in 1:nrow(statecount)){
index<-blookup[ blookup$Behavior %in% statecount[x,"Behavior"],"Index"]
depth_tau<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==index)
depth_mu<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==index)
travel_dives<-data.frame(DepthMax=rtruncnorm(n=as.numeric(statecount[x,"n"]),mean=depth_mu$value,sd=1/sqrt(depth_tau$value),a=0),Behavior=statecount[x,"Behavior"])
pred_dives[[x]]<-travel_dives
}
pred_dives<-bind_rows(pred_dives)
ggplot(pred_dives)  + geom_histogram(data=mdat,aes(x=DepthMax),col="black")+ geom_histogram(alpha=0.8,aes(x=DepthMax,fill=Behavior))  + theme_bw() + labs(x="Dive Depth (m)")
ggsave("Figures/DiveHist.jpg",height=4,width=7)
ggplot(pc_dive[pc_dive$parameter=="dive_new",])+  geom_density(aes(x=value),col='red') + geom_density(data=mdat,aes(x=DepthMax),col="black",size=1.5) + theme_bw() + labs(x="Dive Depth (m)")
ggsave("Figures/DivePredict.jpg",height=4,width=7)
timef<-function(alpha,beta,beta2,x){
y<-inv.logit(alpha + beta* cos((2*pi*x)/(24)) + beta2 * sin((2*pi*x)/24)^2)
return(data.frame(x,y))
}
cosp<-pc_dive %>% filter(parameter %in% c("alpha_hours","beta_hours","beta2_hours")) %>% dplyr::select(-par) %>% spread(parameter,value) %>% group_by(Draw,chain,Behavior) %>% do(timef(alpha=.$alpha_hours,beta=.$beta_hours,beta2=.$beta2_hours,x=as.numeric(hours)))
ggplot(data=cosp,aes(x=x,y=y,col=Behavior)) + geom_point() + geom_line() + facet_wrap(~Behavior)
cosp
cosp<-pc_dive %>% filter(parameter %in% c("alpha_hours","beta_hours","beta2_hours")) %>% dplyr::select(-par) %>% spread(parameter,value) %>% group_by(Draw,chain,Behavior) %>% do(timef(alpha=.$alpha_hours,beta=.$beta_hours,beta2=.$beta2_hours,x=as.numeric(hours))) %>% group_by(Behavior,x) %>% summarize(mean=mean(y),upper=quantile(y,0.95),lower=quantile(y,0.05))
cosp
ggplot(data=cosp,aes(x=x,y=mean,col=Behavior)) + geom_point() + geom_line() + facet_wrap(~Behavior)
ggplot(data=cosp,aes(x=x,y=mean,col=Behavior)) + geom_point() + geom_line() + facet_wrap(~Behavior) + ylim(0,1)
ggplot(data=cosp,aes(x=x,col=Behavior)) + geom_line(aes(y=mean),col="black")  + geom_line(aes(y=upper),col="gray",linetype="dashed")+ geom_line(aes(y=lower),col="gray",linetype="dashed") + facet_wrap(~Behavior) + ylim(0,1)
ggplot(data=cosp,aes(x=x,col=Behavior)) + geom_line(aes(y=mean),col="black")  + geom_line(aes(y=upper),col="gray",linetype="dashed")+ geom_line(aes(y=lower),col="gray",linetype="dashed") + facet_wrap(~Behavior) + ylim(0,1) + theme_bw()
timef<-function(alpha,beta,beta2,x){
y<-inv.logit(alpha + beta* cos((2*pi*x)/(24)) + beta2 * sin((2*pi*x)/24)^2)
return(data.frame(x,y))
}
cosp<-pc_dive %>% filter(parameter %in% c("alpha_hours","beta_hours","beta2_hours")) %>% dplyr::select(-par) %>% spread(parameter,value) %>% group_by(Draw,chain,Behavior) %>% do(timef(alpha=.$alpha_hours,beta=.$beta_hours,beta2=.$beta2_hours,x=as.numeric(hours))) %>% group_by(Behavior,x) %>% summarize(mean=mean(y),upper=quantile(y,0.95),lower=quantile(y,0.05))
ggplot(data=cosp,aes(x=x,col=Behavior)) + geom_line(aes(y=mean),col="black")  + geom_line(aes(y=upper),col="gray",linetype="dashed")+ geom_line(aes(y=lower),col="gray",linetype="dashed") + facet_wrap(~Behavior) + ylim(0,1) + theme_bw()
ggplot(data=cosp,aes(x=x,col=Behavior)) + geom_line(aes(y=mean),col="black")  + geom_line(aes(y=upper),col="gray",linetype="dashed")+ geom_line(aes(y=lower),col="gray",linetype="dashed") + facet_wrap(~Behavior) + ylim(0,1) + theme_bw() + labs(x="Hour",y="Transition to Resting State")
qplot(inv.logit(rnorm(1e5,100,1/sqrt(0.005))))
qplot(rnorm(1e5,100,1/sqrt(0.005)))
qplot(rnorm(1e5,100,1/sqrt(0.0005)))
qplot(rnorm(1e5,100,1/sqrt(0.00005)))
qplot(rnorm(1e5,0.1100,1/sqrt(0.00005)))
qplot(rnorm(1e5,0.1100,1/sqrt(5)))
qplot(rnorm(1e5,0.1100,1/sqrt(500)))
qplot(rnorm(1e5,0.1100,1/sqrt(300)))
qplot(rnorm(1e5,0.100,1/sqrt(300)))
qplot(rnorm(1e5,0.150,1/sqrt(300)))
qplot(rnorm(1e5,0.02,1/sqrt(300)))
qplot(rnorm(1e5,0.02,1/sqrt(1000)))
qplot(rnorm(1e5,0.02,1/sqrt(2000)))
qplot(rnorm(1e5,0.015,1/sqrt(2000)))
qplot(rnorm(1e5,0.015,1/sqrt(5000)))
load("/Users/Ben/Dropbox/Whales/Dive/WhalePhys.RData")
#Behavior lookup
blookup<-data.frame(Behavior=c("Traveling","Foraging","Resting"),Index=c(1,2,3))
#how many of each state to draw?
statecount<-state_est %>% group_by(Behavior) %>% filter(is.na(Latitude)) %>% summarize(n=length(jStep))
library(tidyr)
library(ggplot2)
library(maptools)
library(shiny)
library(raster)
library(data.table)
library(ggmap)
library(leaflet)
library(dplyr)
library(stringr)
library(chron)
library(R2jags)
library(boot)
library(knitr)
library(MCMCpack)
library(truncnorm)
newModel=T
opts_chunk$set(echo=F,warning=F,message=F,fig.width=11)
mytheme<-theme(axis.text.x=element_blank(),axis.ticks.x=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank(),axis.title.x=element_blank(),axis.title.y=element_blank(),panel.grid=element_blank())
#Behavior lookup
blookup<-data.frame(Behavior=c("Traveling","Foraging","Resting"),Index=c(1,2,3))
#how many of each state to draw?
statecount<-state_est %>% group_by(Behavior) %>% filter(is.na(Latitude)) %>% summarize(n=length(jStep))
pred_dives<-list()
for(x in 1:nrow(statecount)){
index<-blookup[ blookup$Behavior %in% statecount[x,"Behavior"],"Index"]
depth_tau<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==index)
depth_mu<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==index)
travel_dives<-data.frame(DepthMax=rtruncnorm(n=as.numeric(statecount[x,"n"]),mean=depth_mu$value,sd=1/sqrt(depth_tau$value),a=0),Behavior=statecount[x,"Behavior"])
pred_dives[[x]]<-travel_dives
}
pred_dives<-bind_rows(pred_dives)
ggplot(pred_dives)  + geom_histogram(data=mdat,aes(x=DepthMax*1000),col="black")+ geom_histogram(alpha=0.8,aes(x=DepthMax*1000,fill=Behavior))  + theme_bw() + labs(x="Dive Depth (m)")
ggsave("Figures/DiveHist.jpg",height=4,width=7)
ggplot(pc_dive[pc_dive$parameter=="dive_new",])+  geom_density(aes(x=value*1000),col='red') + geom_density(data=mdat,aes(x=DepthMax*1000),col="black",size=1.5) + theme_bw() + labs(x="Dive Depth (m)")
ggsave("Figures/DivePredict.jpg",height=4,width=7)
pred_dives
head(mdat)
ggsave("Figures/DivePredict.jpg",height=4,width=7)
ggplot(pc_dive[pc_dive$parameter=="dive_new",])+  geom_density(aes(x=value*1000),col='red') + geom_density(data=mdat,aes(x=DepthMax*1000),col="black",size=1.5) + theme_bw() + labs(x="Dive Depth (m)")
#Behavior lookup
blookup<-data.frame(Behavior=c("Traveling","Foraging","Resting"),Index=c(1,2,3))
#how many of each state to draw?
statecount<-state_est %>% group_by(Behavior) %>% filter(is.na(Latitude)) %>% summarize(n=length(jStep))
pred_dives<-list()
for(x in 1:nrow(statecount)){
index<-blookup[ blookup$Behavior %in% statecount[x,"Behavior"],"Index"]
depth_tau<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==index)
depth_mu<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==index)
travel_dives<-data.frame(DepthMax=rtruncnorm(n=as.numeric(statecount[x,"n"]),mean=depth_mu$value,sd=1/sqrt(depth_tau$value),a=0),Behavior=statecount[x,"Behavior"])
pred_dives[[x]]<-travel_dives
}
pred_dives<-bind_rows(pred_dives)
ggplot(pred_dives)  + geom_histogram(data=mdat,aes(x=DepthMax*1000),col="black")+ geom_histogram(alpha=0.8,aes(x=DepthMax*1000,fill=Behavior))  + theme_bw() + labs(x="Dive Depth (m)")
ggsave("Figures/DiveHist.jpg",height=4,width=7)
ggplot(pc_dive[pc_dive$parameter=="dive_new",])+  geom_density(aes(x=value*1000),col='red') + geom_density(data=mdat,aes(x=DepthMax*1000),col="black",size=1.5) + theme_bw() + labs(x="Dive Depth (m)")
ggsave("Figures/DivePredict.jpg",height=4,width=7)
ggplot(pc_dive[pc_dive$parameter=="dive_new",])+  geom_density(aes(x=value),col='red') + geom_density(data=mdat,aes(x=DepthMax*1000),col="black",size=1.5) + theme_bw() + labs(x="Dive Depth (m)")
ggplot(pc_dive[pc_dive$parameter=="dive_new",])+  geom_density(aes(x=value*1000),col='red') + geom_density(data=mdat,aes(x=DepthMax*1000),col="black",size=1.5) + theme_bw() + labs(x="Dive Depth (m)")
