obs_class<-reshape2::acast(mdat,Animal~Track~step~jStep,value.var="numargos",fun.aggregate = min)
obs_class[!is.finite(obs_class)]<-NA
#dive array
divearray<-reshape2::acast(mdat,Animal~Track~step~jStep,value.var="DepthMax",fun.aggregate = max)
#fill the empty values
divearray[!is.finite(divearray)]<-NA
#source jags file
source("Bayesian/Diving.R")
#prior cov shape
R <- diag(c(1,1))
data=list(dive=divearray,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#paramters to track
pt<-c("alpha","depth_mu","depth_tau")
if(newModel){
system.time(jagM<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10,n.burnin=0,n.thin=2,DIC=FALSE))
}
#bind chains
pc_dive<-reshape2::melt(jagM$BUGSoutput$sims.array)
colnames(pc_dive)<-c("Draw","chain","par","value")
#extract parameter name
pc_dive$parameter<-data.frame(str_match(pc_dive$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc_dive,pc_dive$parameter)
#single index
splitpc<-lapply(splitpc,function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
#bind all matrices back together
pc_dive<-bind_rows(splitpc)
rm(splitpc)
alpha<-pc_dive %>% filter(parameter=="alpha")
alpha$Behavior<-as.character(alpha$Behavior)
alpha$Behavior[alpha$Behavior=="1"]<-"Traveling->Traveling"
alpha$Behavior[alpha$Behavior=="2"]<-"Foraging->Traveling"
ggplot(alpha,aes(x=value)) + geom_histogram() + facet_wrap(~Behavior) + labs(x="Probability of Transition")
#label previous and prediction state, treat traveling as a success and foraging as a failure in a binomial trial
alpha[alpha$Behavior=="Traveling->Traveling","Previous_State"]<-1
alpha[alpha$Behavior=="Foraging->Traveling","Previous_State"]<-0
divep<-pc_dive %>% filter(parameter %in% c("depth_mu","depth_tau"))
ggplot(divep,aes(x=value)) + geom_histogram() + facet_wrap(~Behavior)
ggplot(pc_dive,aes(x=Draw,col=Chain)) + geom_line() + facet_wrap(~parameter)
ggplot(pc_dive,aes(x=Draw,col=chain)) + geom_line() + facet_wrap(~parameter)
ggplot(pc_dive,aes(x=Draw,y=value,col=chain)) + geom_line() + facet_wrap(~parameter)
ggplot(pc_dive,aes(x=Draw,y=value,col=as.factor(chain))) + geom_line() + facet_wrap(~parameter)
ggplot(pc_dive,aes(x=Draw,y=value,col=as.factor(chain))) + geom_line() + facet_wrap(~parameter,scales="free")
dim(mdat)
system.time(jagM<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=1000,n.burnin=900,n.thin=2,DIC=FALSE))
#bind chains
pc_dive<-reshape2::melt(jagM$BUGSoutput$sims.array)
colnames(pc_dive)<-c("Draw","chain","par","value")
#extract parameter name
pc_dive$parameter<-data.frame(str_match(pc_dive$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc_dive,pc_dive$parameter)
#single index
splitpc<-lapply(splitpc,function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
#bind all matrices back together
pc_dive<-bind_rows(splitpc)
rm(splitpc)
ggplot(pc_dive,aes(x=Draw,y=value,col=as.factor(chain))) + geom_line() + facet_wrap(~parameter,scales="free")
ggplot(pc_dive,aes(x=Draw,y=value,col=as.factor(chain))) + geom_line() + facet_wrap(~par,scales="free")
system.time(jagM<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10000,n.burnin=9000,n.thin=2,DIC=FALSE))
#bind chains
pc_dive<-reshape2::melt(jagM$BUGSoutput$sims.array)
colnames(pc_dive)<-c("Draw","chain","par","value")
#extract parameter name
pc_dive$parameter<-data.frame(str_match(pc_dive$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc_dive,pc_dive$parameter)
#single index
splitpc<-lapply(splitpc,function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
#bind all matrices back together
pc_dive<-bind_rows(splitpc)
rm(splitpc)
ggplot(pc_dive,aes(x=Draw,y=value,col=as.factor(chain))) + geom_line() + facet_wrap(~par,scales="free")
hist(mdat$DepthMax)
head(pc_dive)
depth_mu1<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==1)
depth_mu1<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==1)
depth_mu2<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==2)
depth_tau1<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==1)
depth_tau2<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==2)
rnorm(1e5,depth_mu1,depth_tau1)
rnorm(1e5,depth_mu1$value,depth_tau1$value)
travel_dives<-rnorm(1e5,depth_mu1$value,depth_tau1$value)
travel_dives<-rnorm(1e5,depth_mu1$value,depth_tau1$value)
forage_dives<-rnorm(1e5,depth_mu2$value,depth_tau2$value)
pred_dives<0bind_rows(travel_dives,forage_dives)
travel_dives<-data.frame(rnorm(1e5,depth_mu1$value,depth_tau1$value),Behavior="Traveling")
forage_dives<-data.frame(rnorm(1e5,depth_mu2$value,depth_tau2$value),Behavior="Foraging")
pred_dives<-bind_rows(travel_dives,forage_dives)
head(pred_dives)
travel_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu1$value,depth_tau1$value),Behavior="Traveling")
forage_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu2$value,depth_tau2$value),Behavior="Foraging")
pred_dives<-bind_rows(travel_dives,forage_dives)
ggplot(pred_dives,aes(x=MaxDepths,fill=Behavior)) + geom_histogram()
ggplot(pred_dives,aes(x=MaxDepth,fill=Behavior)) + geom_histogram()
system.time(jagM<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=50000,n.burnin=49000,n.thin=2,DIC=FALSE))
#bind chains
pc_dive<-reshape2::melt(jagM$BUGSoutput$sims.array)
colnames(pc_dive)<-c("Draw","chain","par","value")
#extract parameter name
pc_dive$parameter<-data.frame(str_match(pc_dive$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc_dive,pc_dive$parameter)
#single index
splitpc<-lapply(splitpc,function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
#bind all matrices back together
pc_dive<-bind_rows(splitpc)
rm(splitpc)
ggplot(pc_dive,aes(x=Draw,y=value,col=as.factor(chain))) + geom_line() + facet_wrap(~par,scales="free")
alpha<-pc_dive %>% filter(parameter=="alpha")
alpha$Behavior<-as.character(alpha$Behavior)
alpha$Behavior[alpha$Behavior=="1"]<-"Traveling->Traveling"
alpha$Behavior[alpha$Behavior=="2"]<-"Foraging->Traveling"
ggplot(alpha,aes(x=value)) + geom_histogram() + facet_wrap(~Behavior) + labs(x="Probability of Transition")
#label previous and prediction state, treat traveling as a success and foraging as a failure in a binomial trial
alpha[alpha$Behavior=="Traveling->Traveling","Previous_State"]<-1
alpha[alpha$Behavior=="Foraging->Traveling","Previous_State"]<-0
depth_mu1<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==1)
depth_mu2<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==2)
depth_tau1<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==1)
depth_tau2<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==2)
travel_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu1$value,depth_tau1$value),Behavior="Traveling")
forage_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu2$value,depth_tau2$value),Behavior="Foraging")
pred_dives<-bind_rows(travel_dives,forage_dives)
ggplot(pred_dives,aes(x=MaxDepth,fill=Behavior)) + geom_histogram()
divep<-pc_dive %>% filter(parameter %in% c("depth_mu","depth_tau"))
ggplot(divep,aes(x=value)) + geom_histogram() + facet_wrap(~Behavior)
## Simulate dive depth
```{r}
depth_mu1<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==1)
depth_mu2<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==2)
depth_tau1<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==1)
depth_tau2<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==2)
travel_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu1$value,depth_tau1$value),Behavior="Traveling")
forage_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu2$value,depth_tau2$value),Behavior="Foraging")
pred_dives<-bind_rows(travel_dives,forage_dives)
ggplot(pred_dives,aes(x=MaxDepth,fill=Behavior)) + geom_histogram()
divep<-pc_dive %>% filter(parameter %in% c("depth_mu","depth_tau"))
ggplot(divep,aes(x=value)) + geom_histogram() + facet_wrap(~Behavior)
## Simulate dive depth
depth_mu1<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==1)
depth_mu2<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==2)
depth_tau1<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==1)
depth_tau2<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==2)
travel_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu1$value,depth_tau1$value),Behavior="Traveling")
forage_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu2$value,depth_tau2$value),Behavior="Foraging")
pred_dives<-bind_rows(travel_dives,forage_dives)
ggplot(pred_dives,aes(x=MaxDepth,fill=Behavior)) + geom_histogram()
#source jags file
source("Bayesian/Diving.R")
#prior cov shape
R <- diag(c(1,1))
data=list(dive=divearray,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#paramters to track
pt<-c("alpha","depth_mu","depth_tau")
if(newModel){
system.time(jagM<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10000,n.burnin=9000,n.thin=2,DIC=FALSE))
}
system.time(jagM<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10000,n.burnin=9000,n.thin=2,DIC=FALSE))
#source jags file
source("Bayesian/Diving.R")
#prior cov shape
R <- diag(c(1,1))
data=list(dive=divearray,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#paramters to track
pt<-c("alpha","depth_mu","depth_tau")
if(newModel){
system.time(jagM<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10000,n.burnin=9000,n.thin=2,DIC=FALSE))
}
#bind chains
pc_dive<-reshape2::melt(jagM$BUGSoutput$sims.array)
colnames(pc_dive)<-c("Draw","chain","par","value")
#extract parameter name
pc_dive$parameter<-data.frame(str_match(pc_dive$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc_dive,pc_dive$parameter)
#single index
splitpc<-lapply(splitpc,function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
#bind all matrices back together
pc_dive<-bind_rows(splitpc)
rm(splitpc)
ggplot(pc_dive,aes(x=Draw,y=value,col=as.factor(chain))) + geom_line() + facet_wrap(~par,scales="free")
alpha<-pc_dive %>% filter(parameter=="alpha")
alpha$Behavior<-as.character(alpha$Behavior)
alpha$Behavior[alpha$Behavior=="1"]<-"Traveling->Traveling"
alpha$Behavior[alpha$Behavior=="2"]<-"Foraging->Traveling"
ggplot(alpha,aes(x=value)) + geom_histogram() + facet_wrap(~Behavior) + labs(x="Probability of Transition")
#label previous and prediction state, treat traveling as a success and foraging as a failure in a binomial trial
alpha[alpha$Behavior=="Traveling->Traveling","Previous_State"]<-1
alpha[alpha$Behavior=="Foraging->Traveling","Previous_State"]<-0
divep<-pc_dive %>% filter(parameter %in% c("depth_mu","depth_tau"))
ggplot(divep,aes(x=value)) + geom_histogram() + facet_wrap(~Behavior)
## Simulate dive depth
depth_mu1<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==1)
depth_mu2<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==2)
depth_tau1<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==1)
depth_tau2<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==2)
travel_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu1$value,depth_tau1$value),Behavior="Traveling")
forage_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu2$value,depth_tau2$value),Behavior="Foraging")
pred_dives<-bind_rows(travel_dives,forage_dives)
ggplot(pred_dives,aes(x=MaxDepth,fill=Behavior)) + geom_histogram()
#source jags file
source("Bayesian/Diving.R")
#prior cov shape
R <- diag(c(1,1))
data=list(dive=divearray,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#paramters to track
pt<-c("alpha","depth_mu","depth_tau")
if(newModel){
system.time(jagM<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10000,n.burnin=9000,n.thin=2,DIC=FALSE))
}
#bind chains
pc_dive<-reshape2::melt(jagM$BUGSoutput$sims.array)
colnames(pc_dive)<-c("Draw","chain","par","value")
#extract parameter name
pc_dive$parameter<-data.frame(str_match(pc_dive$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc_dive,pc_dive$parameter)
#single index
splitpc<-lapply(splitpc,function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
#bind all matrices back together
pc_dive<-bind_rows(splitpc)
rm(splitpc)
ggplot(pc_dive,aes(x=Draw,y=value,col=as.factor(chain))) + geom_line() + facet_wrap(~par,scales="free")
alpha<-pc_dive %>% filter(parameter=="alpha")
alpha$Behavior<-as.character(alpha$Behavior)
alpha$Behavior[alpha$Behavior=="1"]<-"Traveling->Traveling"
alpha$Behavior[alpha$Behavior=="2"]<-"Foraging->Traveling"
ggplot(alpha,aes(x=value)) + geom_histogram() + facet_wrap(~Behavior) + labs(x="Probability of Transition")
#label previous and prediction state, treat traveling as a success and foraging as a failure in a binomial trial
alpha[alpha$Behavior=="Traveling->Traveling","Previous_State"]<-1
alpha[alpha$Behavior=="Foraging->Traveling","Previous_State"]<-0
divep<-pc_dive %>% filter(parameter %in% c("depth_mu","depth_tau"))
ggplot(divep,aes(x=value)) + geom_histogram() + facet_wrap(~Behavior)
## Simulate dive depth
depth_mu1<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==1)
depth_mu2<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==2)
depth_tau1<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==1)
depth_tau2<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==2)
travel_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu1$value,depth_tau1$value),Behavior="Traveling")
forage_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu2$value,depth_tau2$value),Behavior="Foraging")
pred_dives<-bind_rows(travel_dives,forage_dives)
ggplot(pred_dives,aes(x=MaxDepth,fill=Behavior)) + geom_histogram()
hist(rnorm(1e5,50,sqrt(1/0.01)))
hist(rnorm(1e5,50,sqrt(1/0.001)))
hist(rnorm(1e5,50,sqrt(1/0.05)))
hist(rnorm(1e5,50,sqrt(1/0.01)))
hist(rnorm(1e5,50,sqrt(1/0.005)))
hist(mdat$DepthMax)
hist(rnorm(1e5,50,sqrt(1/0.005)))
hist(rlnorm(1e5,50))
hist(rlnorm(1e5,2))
log(50)
log(1)
hist(rlnorm(1e5,1))
?rlnrom
?rlnorm
hist(mdat$DepthMax)
hist(log(mdat$DepthMax))
log(400)
hist(0)
log(0.1)
hist(log(mdat$DepthMax))
log(mdat$DepthMax)
exp(log(mdat$DepthMax))
hist(exp(log(mdat$DepthMax)))
hist(rlnorm(1))
hist(rlnorm(1e5,1))
hist(rlnorm(1e5,1,sqrt(1/0.001)))
hist(rlnorm(1e5,1,))
sqrt(1/0.001)
log(sqrt(1/0.001))
hist(rlnorm(1e5,1,2))
hist(rlnorm(1e5,1,1))
hist(rlnorm(1e5,1,0.5))
hist(rlnorm(1e5,1,2))
hist(rlnorm(1e5,1,1.1))
hist(rlnorm(1e5,1,1))
exp(1)
log(sqrt(1/0.001))
hist(rlnorm(1e5,1,1))
hist(rlnorm(1e5,1,sqrt(1/0.001)))
hist(rlnorm(1e5,1,log(sqrt(1/0.001))))
hist(rlnorm(1e5,log(50),log(sqrt(1/0.001))))
hist(rlnorm(1e5,log(50),log(sqrt(1/0.0001))))
hist(rlnorm(1e5,log(50),log(sqrt(1/0.1))))
hist(rlnorm(1e5,log(50),log(sqrt(1/0.2))))
hist(rlnorm(1e5,log(50),log(sqrt(1/0.1))))
hist(rlnorm(1e5,log(50),log(sqrt(1/0.5))))
hist(rlnorm(1e5,log(50),log(sqrt(1/0.5))))
1/0.5
#source jags file
source("Bayesian/Diving.R")
#prior cov shape
R <- diag(c(1,1))
data=list(dive=divearray,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#paramters to track
pt<-c("alpha","depth_mu","depth_tau")
if(newModel){
system.time(jagM<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10000,n.burnin=9000,n.thin=2,DIC=FALSE))
}
#bind chains
pc_dive<-reshape2::melt(jagM$BUGSoutput$sims.array)
colnames(pc_dive)<-c("Draw","chain","par","value")
#extract parameter name
pc_dive$parameter<-data.frame(str_match(pc_dive$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc_dive,pc_dive$parameter)
#single index
splitpc<-lapply(splitpc,function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
#bind all matrices back together
pc_dive<-bind_rows(splitpc)
rm(splitpc)
ggplot(pc_dive,aes(x=Draw,y=value,col=as.factor(chain))) + geom_line() + facet_wrap(~par,scales="free")
#source jags file
source("Bayesian/Diving.R")
#prior cov shape
R <- diag(c(1,1))
data=list(dive=divearray,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#paramters to track
pt<-c("alpha","depth_mu","depth_tau")
if(newModel){
system.time(jagM<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10000,n.burnin=9000,n.thin=2,DIC=FALSE))
}
divep<-pc_dive %>% filter(parameter %in% c("depth_mu","depth_tau"))
ggplot(divep,aes(x=value)) + geom_histogram() + facet_wrap(~Behavior)
## Simulate dive depth
depth_mu1<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==1)
depth_mu2<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==2)
depth_tau1<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==1)
depth_tau2<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==2)
travel_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu1$value,depth_tau1$value),Behavior="Traveling")
forage_dives<-data.frame(MaxDepth=rlnorm(1e5,depth_mu2$value,depth_tau2$value),Behavior="Foraging")
pred_dives<-bind_rows(travel_dives,forage_dives)
ggplot(pred_dives,aes(x=MaxDepth,fill=Behavior)) + geom_histogram()
system.time(jagM<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10000,n.burnin=9000,n.thin=2,DIC=FALSE))
forage_dives<-data.frame(MaxDepth=rlnorm(1e5,log(depth_mu2$value),log(depth_tau2$value)),Behavior="Foraging")
depth_mu2$value
log(depth_mu2$value)
depth_tau2$value
log(depth_tau2$value)
forage_dives<-data.frame(MaxDepth=rlnorm(1e5,log(depth_mu2$value),log(depth_tau2$value)),Behavior="Foraging")
rlnorm(10,2,0.1)
#source jags file
source("Bayesian/Diving.R")
#prior cov shape
R <- diag(c(1,1))
data=list(dive=divearray,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#paramters to track
pt<-c("alpha","depth_mu","depth_tau")
if(newModel){
system.time(jagM<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10000,n.burnin=9000,n.thin=2,DIC=FALSE))
}
#bind chains
pc_dive<-reshape2::melt(jagM$BUGSoutput$sims.array)
colnames(pc_dive)<-c("Draw","chain","par","value")
#extract parameter name
pc_dive$parameter<-data.frame(str_match(pc_dive$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc_dive,pc_dive$parameter)
#single index
splitpc<-lapply(splitpc,function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
#bind all matrices back together
pc_dive<-bind_rows(splitpc)
rm(splitpc)
ggplot(pc_dive,aes(x=Draw,y=value,col=as.factor(chain))) + geom_line() + facet_wrap(~par,scales="free")
alpha<-pc_dive %>% filter(parameter=="alpha")
alpha$Behavior<-as.character(alpha$Behavior)
alpha$Behavior[alpha$Behavior=="1"]<-"Traveling->Traveling"
alpha$Behavior[alpha$Behavior=="2"]<-"Foraging->Traveling"
ggplot(alpha,aes(x=value)) + geom_histogram() + facet_wrap(~Behavior) + labs(x="Probability of Transition")
#label previous and prediction state, treat traveling as a success and foraging as a failure in a binomial trial
alpha[alpha$Behavior=="Traveling->Traveling","Previous_State"]<-1
alpha[alpha$Behavior=="Foraging->Traveling","Previous_State"]<-0
divep<-pc_dive %>% filter(parameter %in% c("depth_mu","depth_tau"))
ggplot(divep,aes(x=value)) + geom_histogram() + facet_wrap(~Behavior)
## Simulate dive depth
depth_mu1<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==1)
depth_mu2<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==2)
depth_tau1<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==1)
depth_tau2<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==2)
travel_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu1$value,depth_tau1$value),Behavior="Traveling")
forage_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu2$value,depth_tau2$value),Behavior="Foraging")
pred_dives<-bind_rows(travel_dives,forage_dives)
ggplot(pred_dives,aes(x=MaxDepth,fill=Behavior)) + geom_histogram()
#source jags file
source("Bayesian/Diving.R")
#prior cov shape
R <- diag(c(1,1))
data=list(dive=divearray,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#paramters to track
pt<-c("alpha","depth_mu","depth_tau")
if(newModel){
system.time(jagM<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10000,n.burnin=9000,n.thin=2,DIC=FALSE))
}
#bind chains
pc_dive<-reshape2::melt(jagM$BUGSoutput$sims.array)
colnames(pc_dive)<-c("Draw","chain","par","value")
#extract parameter name
pc_dive$parameter<-data.frame(str_match(pc_dive$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc_dive,pc_dive$parameter)
#single index
splitpc<-lapply(splitpc,function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
#bind all matrices back together
pc_dive<-bind_rows(splitpc)
rm(splitpc)
ggplot(pc_dive,aes(x=Draw,y=value,col=as.factor(chain))) + geom_line() + facet_wrap(~par,scales="free")
divep<-pc_dive %>% filter(parameter %in% c("depth_mu","depth_tau"))
ggplot(divep,aes(x=value)) + geom_histogram() + facet_wrap(~Behavior)
## Simulate dive depth
depth_mu1<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==1)
depth_mu2<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==2)
depth_tau1<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==1)
depth_tau2<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==2)
travel_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu1$value,depth_tau1$value),Behavior="Traveling")
forage_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu2$value,depth_tau2$value),Behavior="Foraging")
pred_dives<-bind_rows(travel_dives,forage_dives)
ggplot(pred_dives,aes(x=MaxDepth,fill=Behavior)) + geom_histogram()
#source jags file
source("Bayesian/Diving.R")
#prior cov shape
R <- diag(c(1,1))
data=list(dive=divearray,argos=obs,steps=steps,R=R,ind=ind,j=j,idx=idx,tracks=tracks,argos_class=obs_class)
#paramters to track
pt<-c("alpha","depth_mu","depth_tau")
if(newModel){
system.time(jagM<-jags.parallel(model.file = "Bayesian/Diving.jags",data=data,n.chains=2,parameters.to.save=pt,n.iter=10000,n.burnin=9000,n.thin=2,DIC=FALSE))
}
#bind chains
pc_dive<-reshape2::melt(jagM$BUGSoutput$sims.array)
colnames(pc_dive)<-c("Draw","chain","par","value")
#extract parameter name
pc_dive$parameter<-data.frame(str_match(pc_dive$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc_dive,pc_dive$parameter)
#single index
splitpc<-lapply(splitpc,function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
#bind all matrices back together
pc_dive<-bind_rows(splitpc)
rm(splitpc)
ggplot(pc_dive,aes(x=Draw,y=value,col=as.factor(chain))) + geom_line() + facet_wrap(~par,scales="free")
divep<-pc_dive %>% filter(parameter %in% c("depth_mu","depth_tau"))
ggplot(divep,aes(x=value)) + geom_histogram() + facet_wrap(~Behavior)
## Simulate dive depth
depth_mu1<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==1)
depth_mu2<-pc_dive %>% filter(parameter %in% c("depth_mu"),Behavior==2)
depth_tau1<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==1)
depth_tau2<-pc_dive %>% filter(parameter %in% c("depth_tau"),Behavior==2)
travel_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu1$value,depth_tau1$value),Behavior="Traveling")
forage_dives<-data.frame(MaxDepth=rnorm(1e5,depth_mu2$value,depth_tau2$value),Behavior="Foraging")
pred_dives<-bind_rows(travel_dives,forage_dives)
ggplot(pred_dives,aes(x=MaxDepth,fill=Behavior)) + geom_histogram()
head(mdat)
head(sort(table(mdat$Longitude))
)
hist(sort(table(mdat$Longitude)))
library(tidyr)
library(ggplot2)
library(maptools)
library(raster)
library(data.table)
library(dplyr)
library(stringr)
library(chron)
library(R2jags)
library(knitr)
newModel=F
opts_chunk$set(echo=F,warning=F,message=F,fig.width=11)
mytheme<-theme(axis.text.x=element_blank(),axis.ticks.x=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank(),axis.title.x=element_blank(),axis.title.y=element_blank(),panel.grid=element_blank())
load("WhalePhys.RData")
newModel=F
